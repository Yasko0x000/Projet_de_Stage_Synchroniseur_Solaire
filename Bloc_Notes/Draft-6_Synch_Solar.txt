TP ESP Pt5 fini et fonctionnel avec GET.

Début server/client mqtt


Le code : 

#include <PubSubClient.h>
#include <ESP8266WiFi.h>

const char* ssid = "binome_2";
const char* password = "tpRT9025";
const char* mqtt_server = "192.168.1.118";

WiFiClient wifiClient;
PubSubClient client(wifiClient);

void setup() {
  Serial.begin(115200);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");
  
  client.setServer(mqtt_server, 1883);
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();

  // Simuler une température
  float temperature = random(0 - 100);

  // Convertir la température en chaîne de caractères
  char temperatureString[10];
  dtostrf(temperature, 1, 2, temperatureString);

  // Publier la température sur le sujet "temperature/room1"
  client.publish("temperature/room1", temperatureString);
  Serial.print("Published temperature: ");
  Serial.println(temperature);
  
  delay(1000);
}

void reconnect() {
  while (!client.connected()) {
    Serial.print("Connecting to MQTT... ");
    if (client.connect("ArduinoClient")) {
      Serial.println("connected");
    } else {
      Serial.print("failed, rc=  ");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      delay(5000);
    }
  }
}


Puis la commande du sub est : mosquitto_sub -t temperature/room1 -h 192.168.1.118


--------------------------------------------------------------------------------------------------------

Pt 9 Code trouvé -exemple home assustant d'integration led), le code modifié dans le premier defin led, puisque le port n'as pas été trouvé

#include <ESP8266WiFi.h>
#include <ArduinoHA.h>

#define BROKER_ADDR     IPAddress(192,168,1,118)
#define WIFI_SSID       "binome_2"
#define WIFI_PASSWORD   "tpRT9025"

WiFiClient client;
HADevice device;
HAMqtt mqtt(client, device);

// "led" is unique ID of the switch. You should define your own ID.
HASwitch led("led");

void onSwitchCommand(bool state, HASwitch* sender)
{
    digitalWrite(LED_BUILTIN, (state ? HIGH : LOW));
    sender->setState(state); // report state back to the Home Assistant
}

void setup() {
    Serial.begin(9600);
    Serial.println("Starting...");

    // Unique ID must be set!
    byte mac[WL_MAC_ADDR_LENGTH];
    WiFi.macAddress(mac);
    device.setUniqueId(mac, sizeof(mac));

    pinMode(LED_BUILTIN, OUTPUT);
    digitalWrite(LED_BUILTIN, LOW);

    // connect to wifi
    WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
    while (WiFi.status() != WL_CONNECTED) {
        Serial.print(".");
        delay(500); // waiting for the connection
    }
    Serial.println();
    Serial.println("Connected to the network");

    // set device's details (optional)
    device.setName("NodeMCU");
    device.setSoftwareVersion("1.0.0");

    // handle switch state
    led.onCommand(onSwitchCommand);
    led.setName("My LED"); // optional

    mqtt.begin(BROKER_ADDR);
}

void loop() {
    mqtt.loop();

    // You can also change the state at runtime as shown below.
    // This kind of logic can be used if you want to control your switch using a button connected to the device.
    // led.setState(true); // use any state you want
}



Envisage l'utilisation de callback pour resoudre le probleme dans la loop.
Developpemment du callback demain.